swagger: '2.0'
info:
  version: '1.0'
  title: Sunbird Notes API
  description: 'TODO: Add Description'
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: example.com
basePath: /
securityDefinitions:
  auth:
    type: oauth2
    flow: implicit
    authorizationUrl: http://example.com
    scopes: {}
    x-skip-client-authentication: false
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /notes/v1/delete/{noteid}:
    delete:
      description: ''
      summary: Delete Note
      operationId: NotesV1Delete0123329248758743040Delete
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: X-Consumer-ID
        in: header
        required: true
        type: string
        description: ''
      - name: ts
        in: header
        required: true
        type: string
        description: ''
      - name: X-msgid
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security:
      - auth: []
      x-unitTests:
      - request:
          method: DELETE
          uri: /notes/v1/delete/{noteid}
          headers:
            Content-Type: application/json
            X-Consumer-ID: X-Consumer-ID
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Note
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/notes/update/{notid}:
    patch:
      description: ''
      summary: Update Note
      operationId: V1NotesUpdate0123329248758743040Patch
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateNoterequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: X-Consumer-ID
        in: header
        required: true
        type: string
        description: ''
      - name: ts
        in: header
        required: true
        type: string
        description: ''
      - name: X-msgid
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security:
      - auth: []
      x-unitTests:
      - request:
          method: PATCH
          uri: /v1/notes/update/{noteid}
          headers:
            Content-Type: application/json
            X-Consumer-ID: X-Consumer-ID
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: >-
            {
                "id":"unique API ID",
                    "ts":"2013/10/15 16:16:39",
                     "params": { },
                  "request" : {
                  "note" : "My notes1 update 1",
                  "title" : "updated title",
                  "tags": ["tag1"]
                  }
                }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Update Note
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /notes/v1/create:
    post:
      description: ''
      summary: Create Note for user
      operationId: NotesV1CreatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreateNoteForUserrequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: X-Consumer-ID
        in: header
        required: true
        type: string
        description: ''
      - name: ts
        in: header
        required: true
        type: string
        description: ''
      - name: X-msgid
        in: header
        required: true
        type: string
        description: ''
      - name: X-Device-ID
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /notes/v1/create
          headers:
            Content-Type: application/json
            X-Consumer-ID: X-Consumer-ID
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            X-Device-ID: X-Device-ID
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: "{\n    \"request\":{\n             \"userId\" : \"userid\", \n      \"title\" : \"title 2\",\n      \"note\" : \"This is a test Note\", \n      \"courseId\" : \"alpha01crs\",  \n      \"contentId\" : \"alpha01crs\",\n      \"tags\": [\"test\",\"note1\"] \n      } \n   }"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create Note for user
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /notes/v1/read/{noteid}:
    get:
      description: ''
      summary: Get created notes
      operationId: NotesV1Read0123349258019635200Get
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: X-Consumer-ID
        in: header
        required: true
        type: string
        description: ''
      - name: ts
        in: header
        required: true
        type: string
        description: ''
      - name: X-msgid
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security:
      - auth: []
      x-unitTests:
      - request:
          method: GET
          uri: /notes/v1/read/{noteid}
          headers:
            Content-Type: application/json
            X-Consumer-ID: X-Consumer-ID
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get created notes
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /notes/v1/search:
    post:
      description: ''
      summary: Search Note
      operationId: NotesV1SearchPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/SearchNoterequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: X-Consumer-ID
        in: header
        required: true
        type: string
        description: ''
      - name: ts
        in: header
        required: true
        type: string
        description: ''
      - name: X-msgid
        in: header
        required: true
        type: string
        description: ''
      - name: Authorization
        in: header
        required: true
        type: string
        description: ''
      - name: x-authenticated-user-token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /notes/v1/search
          headers:
            Content-Type: application/json
            X-Consumer-ID: X-Consumer-ID
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            Authorization: Bearer {{api-key}}
            x-authenticated-user-token: '{{user-token}}'
          body: >-
            {
              "request" : {
                "query" : "note",
                "filters" : {
                  "userId" : "userid"
                },
                "offset" : 0,
                "limit" : 2,
                "sort_by" : {"updatedDate" : "asc"}
              }
              }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Search Note
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  UpdateNoterequest:
    title: Update NoteRequest
    example:
      id: unique API ID
      ts: 2013/10/15 16:16:39
      params: {}
      request:
        note: My notes1 update 1
        title: updated title
        tags:
        - tag1
    type: object
    properties:
      id:
        description: ''
        example: unique API ID
        type: string
      ts:
        description: ''
        example: 2013/10/15 16:16:39
        type: string
      params:
        description: ''
        example: {}
        type: object
      request:
        $ref: '#/definitions/Request'
        example:
          note: My notes1 update 1
          title: updated title
          tags:
          - tag1
    required:
    - id
    - ts
    - params
    - request
  Request:
    title: Request
    example:
      note: My notes1 update 1
      title: updated title
      tags:
      - tag1
    type: object
    properties:
      note:
        description: ''
        example: My notes1 update 1
        type: string
      title:
        description: ''
        example: updated title
        type: string
      tags:
        description: ''
        example:
        - tag1
        type: array
        items:
          type: string
    required:
    - note
    - title
    - tags
  CreateNoteForUserrequest:
    title: Create Note for userRequest
    example:
      request:
        userId: userid
        title: title 2
        note: This is a test Note
        courseId: alpha01crs
        contentId: alpha01crs
        tags:
        - test
        - note1
    type: object
    properties:
      request:
        $ref: '#/definitions/Request3'
        example:
          userId: userid
          title: title 2
          note: This is a test Note
          courseId: alpha01crs
          contentId: alpha01crs
          tags:
          - test
          - note1
    required:
    - request
  Request3:
    title: Request3
    example:
      userId: userid
      title: title 2
      note: This is a test Note
      courseId: alpha01crs
      contentId: alpha01crs
      tags:
      - test
      - note1
    type: object
    properties:
      userId:
        description: ''
        example: userid
        type: string
      title:
        description: ''
        example: title 2
        type: string
      note:
        description: ''
        example: This is a test Note
        type: string
      courseId:
        description: ''
        example: alpha01crs
        type: string
      contentId:
        description: ''
        example: alpha01crs
        type: string
      tags:
        description: ''
        example:
        - test
        - note1
        type: array
        items:
          type: string
    required:
    - userId
    - title
    - note
    - courseId
    - contentId
    - tags
  SearchNoterequest:
    title: Search NoteRequest
    example:
      request:
        query: note
        filters:
          userId: userid
        offset: 0
        limit: 2
        sort_by:
          updatedDate: asc
    type: object
    properties:
      request:
        $ref: '#/definitions/Request5'
        example:
          query: note
          filters:
            userId: userid
          offset: 0
          limit: 2
          sort_by:
            updatedDate: asc
    required:
    - request
  Request5:
    title: Request5
    example:
      query: note
      filters:
        userId: userid
      offset: 0
      limit: 2
      sort_by:
        updatedDate: asc
    type: object
    properties:
      query:
        description: ''
        example: note
        type: string
      filters:
        $ref: '#/definitions/Filters'
        example:
          userId: userid
      offset:
        description: ''
        example: 0
        type: integer
        format: int32
      limit:
        description: ''
        example: 2
        type: integer
        format: int32
      sort_by:
        $ref: '#/definitions/SortBy'
        example:
          updatedDate: asc
    required:
    - query
    - filters
    - offset
    - limit
    - sort_by
  Filters:
    title: Filters
    example:
      userId: userid
    type: object
    properties:
      userId:
        description: ''
        example: userid
        type: string
    required:
    - userId
  SortBy:
    title: SortBy
    example:
      updatedDate: asc
    type: object
    properties:
      updatedDate:
        description: ''
        example: asc
        type: string
    required:
    - updatedDate
