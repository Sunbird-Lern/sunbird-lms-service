
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
    
    server {
    	listen 80;

	    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
	    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
	    proxy_set_header Host $host; # to forward the original host requested by the client
	    proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection ‘upgrade’;

	    location /auth {
		    add_header Access-Control-Allow-Origin *;
	    	add_header Access-Control-Allow-Credentials true;
	    	add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
	   		add_header "Access-Control-Allow-Headers" "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, Origin, X-Requested-With, Accept";
	   		add_header Content-Length 0;
	        add_header Content-Type text/plain;
	    }

	    location /v2 {
		    add_header Access-Control-Allow-Origin *;
	    	add_header Access-Control-Allow-Credentials true;
	    	add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
	   		add_header "Access-Control-Allow-Headers" "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, Origin, X-Requested-With, Accept";
	   		add_header Content-Length 0;
	        add_header Content-Type text/plain;
	    }

    }
}
